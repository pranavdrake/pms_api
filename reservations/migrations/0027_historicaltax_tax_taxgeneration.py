# Generated by Django 3.2.5 on 2023-01-17 15:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reservations', '0026_auto_20230110_1056'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_name', models.CharField(max_length=255, unique=True)),
                ('applies_form', models.DateField()),
                ('exempt_after', models.IntegerField()),
                ('posting_type', models.CharField(choices=[('slab', 'Slab'), ('flat amount', 'Flat Amount'), ('flat percentage', 'Flat Percentage')], default='slab', max_length=100)),
                ('no_of_slab', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TaxGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('to_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('apply_tax', models.CharField(choices=[('before discount', 'Before Discount'), ('after discount', 'After Discount')], default='before discount', max_length=100)),
                ('apply_tax_on_rack_rate', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, null=True)),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes_generation', to='reservations.tax')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTax',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tax_name', models.CharField(db_index=True, max_length=255)),
                ('applies_form', models.DateField()),
                ('exempt_after', models.IntegerField()),
                ('posting_type', models.CharField(choices=[('slab', 'Slab'), ('flat amount', 'Flat Amount'), ('flat percentage', 'Flat Percentage')], default='slab', max_length=100)),
                ('no_of_slab', models.IntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tax',
                'verbose_name_plural': 'historical taxs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
