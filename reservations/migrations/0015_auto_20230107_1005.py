# Generated by Django 3.2.5 on 2023-01-07 10:05

import creditcards.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0012_booker_historicalbooker_historicaliddetails_historicalmembershiplevel_historicalmembershiptype_histo'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reservations', '0014_auto_20230104_1617'),
    ]

    operations = [
        migrations.CreateModel(
            name='CardDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_on_card', models.TextField()),
                ('card_number', creditcards.models.CardNumberField(max_length=25, verbose_name='card number')),
                ('expiry', creditcards.models.CardExpiryField(verbose_name='expiration date')),
                ('cvv_cvc', creditcards.models.SecurityCodeField(max_length=4, verbose_name='security code')),
                ('masked_card_number', models.CharField(max_length=16, null=True)),
                ('masked_cvv_cvc', models.CharField(blank=True, default='XXX', max_length=3, null=True)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_details', to='accounts.guestprofile')),
                ('payment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='card_details', to='reservations.paymenttype')),
            ],
        ),
        migrations.CreateModel(
            name='DailyDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('room_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('adults', models.PositiveSmallIntegerField()),
                ('children', models.PositiveSmallIntegerField(default=0)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_details', to='reservations.marketcode')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_details', to='reservations.package')),
                ('rate_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_details', to='reservations.ratecode')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Folio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio_number', models.PositiveIntegerField()),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_settled', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('company_agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='folios', to='accounts.account')),
                ('guest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='folios', to='accounts.guestprofile')),
            ],
        ),
        migrations.CreateModel(
            name='GroupReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_date', models.DateField()),
                ('departure_date', models.DateField()),
                ('nights', models.PositiveIntegerField(blank=True)),
                ('status', models.CharField(choices=[('E', 'Enquiry'), ('T', 'Tentative'), ('D', 'Definitive')], max_length=1)),
                ('origin', models.CharField(choices=[('PH', 'Phone'), ('WI', 'Walk-in'), ('HU', 'House use'), ('HRO', 'Hotel Reservation Office'), ('E', 'Email'), ('O', 'Online')], max_length=100)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pax', models.PositiveIntegerField(default=0)),
                ('cut_off_date', models.DateField(blank=True, null=True)),
                ('total_rooms', models.PositiveIntegerField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_group_reservations', to='accounts.account')),
                ('group_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservations', to='accounts.account')),
                ('market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservations', to='reservations.marketcode')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservations', to='reservations.package')),
                ('payment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.paymenttype')),
                ('rate_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservations', to='reservations.ratecode')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateField()),
                ('invoice_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('folio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reservations.folio')),
            ],
        ),
        migrations.CreateModel(
            name='NightAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_date', models.DateField()),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('country_and_state_check', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('arrivals_not_yet_checked_in', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('departures_not_checked_out', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('rolling_business_date', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='completed', max_length=100)),
                ('posting_room_and_tax', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('printing_reports', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_date', models.DateField()),
                ('nights', models.PositiveIntegerField(default=0)),
                ('departure_date', models.DateField()),
                ('adults', models.PositiveIntegerField()),
                ('children', models.PositiveIntegerField(default=0)),
                ('number_of_rooms', models.PositiveIntegerField()),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('eta', models.TimeField(blank=True, null=True)),
                ('etd', models.TimeField(blank=True, null=True)),
                ('origin', models.CharField(choices=[('PH', 'Phone'), ('WI', 'Walk-in'), ('HU', 'House use'), ('HRO', 'Hotel Reservation Office'), ('E', 'Email'), ('O', 'Online')], max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('split_by', models.CharField(blank=True, max_length=100, null=True)),
                ('print_rate', models.BooleanField(default=True)),
                ('reservation_status', models.CharField(choices=[('RES', 'Reserved'), ('WL', 'Wait-list'), ('DI', 'Due In'), ('CI', 'Checked In'), ('DO', 'Due Out'), ('RO', 'Roll Over'), ('CO', 'Checked Out'), ('NS', 'No show'), ('CAN', 'Cancelled'), ('NR', 'Not Reserved'), ('EO', 'Enquiry Only')], max_length=3)),
                ('commission', models.BooleanField(default=False)),
                ('po_number', models.CharField(blank=True, max_length=100, null=True)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_base_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_extra_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_payment', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stay_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('travel_agent_commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost_of_stay', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('comments', models.TextField(blank=True)),
                ('billing_instruction', models.TextField(blank=True)),
                ('unique_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('sub_booking_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('voucher_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agent_reservations', to='accounts.account')),
                ('block_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.groupreservation')),
                ('booker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='accounts.booker')),
                ('card_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.carddetail')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_reservations', to='accounts.account')),
                ('drop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_reservations', to='reservations.pickupdropdetails')),
                ('extras', models.ManyToManyField(blank=True, to='reservations.Extra')),
                ('guest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='accounts.guestprofile')),
                ('market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.marketcode')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.package')),
                ('payment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.paymenttype')),
                ('pick_up', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pick_up_reservations', to='reservations.pickupdropdetails')),
                ('preferences', models.ManyToManyField(blank=True, to='reservations.Preference')),
                ('rate_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.ratecode')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SharingID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sharing_id', models.PositiveIntegerField(unique=True)),
                ('number_of_reservations', models.PositiveIntegerField()),
            ],
        ),
        migrations.RenameField(
            model_name='historicalticket',
            old_name='Subject',
            new_name='subject',
        ),
        migrations.RenameField(
            model_name='ticket',
            old_name='Subject',
            new_name='subject',
        ),
        migrations.CreateModel(
            name='WaitList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wait_list_sequence', models.PositiveIntegerField(db_index=True)),
                ('date', models.DateField()),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reservations.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('supplement', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('transaction_type', models.CharField(choices=[('Bill', 'Bill'), ('Payment', 'Payment'), ('Allowance', 'Allowance'), ('Round off', 'Round off'), ('Paid out', 'Paid out')], max_length=50)),
                ('is_deposit', models.BooleanField(default=False)),
                ('tax_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cgst', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sgst', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_charge_commission_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('service_charge_commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_charge_commission_tax_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('service_charge_commission_cgst', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('service_charge_commission_sgst', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_with_service_charge_commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_service_charge_cancelled', models.BooleanField(default=False)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('pos_bill_number', models.CharField(blank=True, max_length=255, null=True)),
                ('pos_session', models.CharField(blank=True, max_length=255, null=True)),
                ('allowance_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='reservations.transaction')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='reservations.carddetail')),
                ('company_agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='accounts.account')),
                ('folio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='reservations.folio')),
                ('guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='accounts.guestprofile')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='reservations.invoice')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='reservations.package')),
                ('passer_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='accounts.passerby')),
                ('rate_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='reservations.ratecode')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='reservations.reservation')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='reservations.room')),
                ('transaction_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='reservations.transactioncode')),
            ],
        ),
        migrations.CreateModel(
            name='RoutingCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('routing_code', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('transaction_codes', models.ManyToManyField(to='reservations.TransactionCode')),
            ],
        ),
        migrations.CreateModel(
            name='Routing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('routing_type', models.CharField(choices=[('room', 'Room'), ('guest', 'Guest'), ('account', 'Account'), ('folio', 'Folio')], max_length=100)),
                ('entry_stay', models.BooleanField(default=False)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('from_reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routings_from_reservation', to='reservations.reservation')),
                ('from_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='routings_from_room', to='reservations.room')),
                ('payment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routings', to='reservations.paymenttype')),
                ('routing_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routings', to='reservations.routingcode')),
                ('routing_for_guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routings_for_guest', to='accounts.guestprofile')),
                ('routing_to_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routings_to_account', to='accounts.account')),
                ('routing_to_guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routings_to_guest', to='accounts.guestprofile')),
                ('to_folio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='routings', to='reservations.folio')),
                ('to_reservations', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routings_to_reservation', to='reservations.reservation')),
                ('to_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='routings_to_room', to='reservations.room')),
                ('transaction', models.ManyToManyField(to='reservations.Transaction')),
            ],
        ),
        migrations.CreateModel(
            name='RoomOccupancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_occupancy', to='reservations.reservation')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_occupancy', to='reservations.room')),
            ],
        ),
        migrations.AddField(
            model_name='reservation',
            name='reservation_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.reservationtype'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='room_to_charge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room_to_charge_reservations', to='reservations.room'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.roomtype'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='selected_room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='selected_room_reservations', to='reservations.room'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='sharing_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.sharingid'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='reservations.source'),
        ),
        migrations.CreateModel(
            name='Reinstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reinstate_date', models.DateField()),
                ('reason_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reinstates', to='reservations.reason')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reinstates', to='reservations.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='RateSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('room_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('room_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sub_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_tax_generated', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_detail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rate_summaries', to='reservations.dailydetail')),
                ('rate_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rate_summaries', to='reservations.ratecode')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate_summaries', to='reservations.reservation')),
            ],
            options={
                'verbose_name_plural': 'Rate Summaries',
            },
        ),
        migrations.CreateModel(
            name='OutofOrderandService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('status', models.CharField(choices=[('out_of_order', 'OutofOrder'), ('out_of_service', 'Out of Service')], max_length=100)),
                ('return_status', models.CharField(choices=[('clean', 'Clean'), ('inspected', 'Inspected'), ('dirty', 'Dirty')], default='dirty', max_length=100)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_of_order_or_out_of_service', to='reservations.reason')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_of_order_or_out_of_service', to='reservations.room')),
            ],
            options={
                'verbose_name': 'Out of Order/Out of Service',
                'verbose_name_plural': 'Out of Order/Out of Service',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWaitList',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('wait_list_sequence', models.PositiveIntegerField(db_index=True)),
                ('date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
            ],
            options={
                'verbose_name': 'historical wait list',
                'verbose_name_plural': 'historical wait lists',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSharingID',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('sharing_id', models.PositiveIntegerField(db_index=True)),
                ('number_of_reservations', models.PositiveIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sharing id',
                'verbose_name_plural': 'historical sharing ids',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRoutingCode',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('routing_code', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical routing code',
                'verbose_name_plural': 'historical routing codes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRouting',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('routing_type', models.CharField(choices=[('room', 'Room'), ('guest', 'Guest'), ('account', 'Account'), ('folio', 'Folio')], max_length=100)),
                ('entry_stay', models.BooleanField(default=False)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('from_reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
                ('from_room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('payment_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.paymenttype')),
                ('routing_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.routingcode')),
                ('routing_for_guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.guestprofile')),
                ('routing_to_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.account')),
                ('routing_to_guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.guestprofile')),
                ('to_folio', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.folio')),
                ('to_reservations', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
                ('to_room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
            ],
            options={
                'verbose_name': 'historical routing',
                'verbose_name_plural': 'historical routings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRoomOccupancy',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
                ('room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
            ],
            options={
                'verbose_name': 'historical room occupancy',
                'verbose_name_plural': 'historical room occupancys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReservationType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('reservation_type', models.CharField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical reservation type',
                'verbose_name_plural': 'historical reservation types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReservation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('arrival_date', models.DateField()),
                ('nights', models.PositiveIntegerField(default=0)),
                ('departure_date', models.DateField()),
                ('adults', models.PositiveIntegerField()),
                ('children', models.PositiveIntegerField(default=0)),
                ('number_of_rooms', models.PositiveIntegerField()),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('eta', models.TimeField(blank=True, null=True)),
                ('etd', models.TimeField(blank=True, null=True)),
                ('origin', models.CharField(choices=[('PH', 'Phone'), ('WI', 'Walk-in'), ('HU', 'House use'), ('HRO', 'Hotel Reservation Office'), ('E', 'Email'), ('O', 'Online')], max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('split_by', models.CharField(blank=True, max_length=100, null=True)),
                ('print_rate', models.BooleanField(default=True)),
                ('reservation_status', models.CharField(choices=[('RES', 'Reserved'), ('WL', 'Wait-list'), ('DI', 'Due In'), ('CI', 'Checked In'), ('DO', 'Due Out'), ('RO', 'Roll Over'), ('CO', 'Checked Out'), ('NS', 'No show'), ('CAN', 'Cancelled'), ('NR', 'Not Reserved'), ('EO', 'Enquiry Only')], max_length=3)),
                ('commission', models.BooleanField(default=False)),
                ('po_number', models.CharField(blank=True, max_length=100, null=True)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_base_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_extra_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_payment', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stay_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('travel_agent_commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost_of_stay', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('comments', models.TextField(blank=True)),
                ('billing_instruction', models.TextField(blank=True)),
                ('unique_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('sub_booking_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('transaction_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('voucher_number', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('agent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.account')),
                ('block_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.groupreservation')),
                ('booker', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.booker')),
                ('card_details', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.carddetail')),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.account')),
                ('drop', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.pickupdropdetails')),
                ('guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.guestprofile')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.marketcode')),
                ('package', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.package')),
                ('payment_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.paymenttype')),
                ('pick_up', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.pickupdropdetails')),
                ('rate_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.ratecode')),
                ('reservation_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservationtype')),
                ('room_to_charge', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
                ('room_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.roomtype')),
                ('selected_room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
                ('sharing_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.sharingid')),
                ('source', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.source')),
            ],
            options={
                'verbose_name': 'historical reservation',
                'verbose_name_plural': 'historical reservations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReinstate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('reinstate_date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reason')),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
            ],
            options={
                'verbose_name': 'historical reinstate',
                'verbose_name_plural': 'historical reinstates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOutofOrderandService',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('status', models.CharField(choices=[('out_of_order', 'OutofOrder'), ('out_of_service', 'Out of Service')], max_length=100)),
                ('return_status', models.CharField(choices=[('clean', 'Clean'), ('inspected', 'Inspected'), ('dirty', 'Dirty')], default='dirty', max_length=100)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reason', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reason')),
                ('room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
            ],
            options={
                'verbose_name': 'historical Out of Order/Out of Service',
                'verbose_name_plural': 'historical Out of Order/Out of Service',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNightAudit',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('business_date', models.DateField()),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('country_and_state_check', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('arrivals_not_yet_checked_in', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('departures_not_checked_out', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('rolling_business_date', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='completed', max_length=100)),
                ('posting_room_and_tax', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('printing_reports', models.CharField(choices=[('completed', 'Completed'), ('not_completed', 'Not Completed')], default='not_completed', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical night audit',
                'verbose_name_plural': 'historical night audits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalForex',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('currency', models.CharField(choices=[('AED', 'UAE Dirham (AED)'), ('AFN', 'Afghani (AFN)'), ('ALL', 'Lek (ALL)'), ('AMD', 'Armenian Dram (AMD)'), ('ANG', 'Netherlands Antillean Guilder (ANG)'), ('AOA', 'Kwanza (AOA)'), ('ARS', 'Argentine Peso (ARS)'), ('AUD', 'Australian Dollar (AUD)'), ('AWG', 'Aruban Florin (AWG)'), ('AZN', 'Azerbaijanian Manat (AZN)'), ('BAM', 'Convertible Mark (BAM)'), ('BBD', 'Barbados Dollar (BBD)'), ('BDT', 'Taka (BDT)'), ('BGN', 'Bulgarian Lev (BGN)'), ('BHD', 'Bahraini Dinar (BHD)'), ('BIF', 'Burundi Franc (BIF)'), ('BMD', 'Bermudian Dollar (BMD)'), ('BND', 'Brunei Dollar (BND)'), ('BOB', 'Boliviano (BOB)'), ('BRL', 'Brazilian Real (BRL)'), ('BSD', 'Bahamian Dollar (BSD)'), ('BTN', 'Ngultrum (BTN)'), ('BWP', 'Pula (BWP)'), ('BYN', 'Belarusian Ruble (BYN)'), ('BZD', 'Belize Dollar (BZD)'), ('CAD', 'Canadian Dollar (CAD)'), ('CDF', 'Congolese Franc (CDF)'), ('CHF', 'Swiss Franc (CHF)'), ('CLP', 'Chilean Peso (CLP)'), ('CNY', 'Yuan Renminbi (CNY)'), ('COP', 'Colombian Peso (COP)'), ('CRC', 'Costa Rican Colon (CRC)'), ('CUC', 'Peso Convertible (CUC)'), ('CUP', 'Cuban Peso (CUP)'), ('CVE', 'Cabo Verde Escudo (CVE)'), ('CZK', 'Czech Koruna (CZK)'), ('DJF', 'Djibouti Franc (DJF)'), ('DKK', 'Danish Krone (DKK)'), ('DOP', 'Dominican Peso (DOP)'), ('DZD', 'Algerian Dinar (DZD)'), ('EGP', 'Egyptian Pound (EGP)'), ('ERN', 'Nakfa (ERN)'), ('ETB', 'Ethiopian Birr (ETB)'), ('EUR', 'Euro (EUR)'), ('FJD', 'Fiji Dollar (FJD)'), ('FKP', 'Falkland Islands Pound (FKP)'), ('GBP', 'Pound Sterling (GBP)'), ('GEL', 'Lari (GEL)'), ('GHS', 'Ghana Cedi (GHS)'), ('GIP', 'Gibraltar Pound (GIP)'), ('GMD', 'Dalasi (GMD)'), ('GNF', 'Guinea Franc (GNF)'), ('GTQ', 'Quetzal (GTQ)'), ('GYD', 'Guyana Dollar (GYD)'), ('HKD', 'Hong Kong Dollar (HKD)'), ('HNL', 'Lempira (HNL)'), ('HRK', 'Kuna (HRK)'), ('HTG', 'Gourde (HTG)'), ('HUF', 'Forint (HUF)'), ('IDR', 'Rupiah (IDR)'), ('ILS', 'New Israeli Sheqel (ILS)'), ('INR', 'Indian Rupee (INR)'), ('IQD', 'Iraqi Dinar (IQD)'), ('IRR', 'Iranian Rial (IRR)'), ('ISK', 'Iceland Krona (ISK)'), ('JMD', 'Jamaican Dollar (JMD)'), ('JOD', 'Jordanian Dinar (JOD)'), ('JPY', 'Yen (JPY)'), ('KES', 'Kenyan Shilling (KES)'), ('KGS', 'Som (KGS)'), ('KHR', 'Riel (KHR)'), ('KMF', 'Comoro Franc (KMF)'), ('KPW', 'North Korean Won (KPW)'), ('KRW', 'Won (KRW)'), ('KWD', 'Kuwaiti Dinar (KWD)'), ('KYD', 'Cayman Islands Dollar (KYD)'), ('KZT', 'Tenge (KZT)'), ('LAK', 'Kip (LAK)'), ('LBP', 'Lebanese Pound (LBP)'), ('LKR', 'Sri Lanka Rupee (LKR)'), ('LRD', 'Liberian Dollar (LRD)'), ('LSL', 'Loti (LSL)'), ('LYD', 'Libyan Dinar (LYD)'), ('MAD', 'Moroccan Dirham (MAD)'), ('MDL', 'Moldovan Leu (MDL)'), ('MGA', 'Malagasy Ariary (MGA)'), ('MKD', 'Denar (MKD)'), ('MMK', 'Kyat (MMK)'), ('MNT', 'Tugrik (MNT)'), ('MOP', 'Pataca (MOP)'), ('MRO', 'Ouguiya (MRO)'), ('MUR', 'Mauritius Rupee (MUR)'), ('MVR', 'Rufiyaa (MVR)'), ('MWK', 'Malawi Kwacha (MWK)'), ('MXN', 'Mexican Peso (MXN)'), ('MYR', 'Malaysian Ringgit (MYR)'), ('MZN', 'Mozambique Metical (MZN)'), ('NAD', 'Namibia Dollar (NAD)'), ('NGN', 'Naira (NGN)'), ('NIO', 'Cordoba Oro (NIO)'), ('NOK', 'Norwegian Krone (NOK)'), ('NPR', 'Nepalese Rupee (NPR)'), ('NZD', 'New Zealand Dollar (NZD)'), ('OMR', 'Rial Omani (OMR)'), ('PAB', 'Balboa (PAB)'), ('PEN', 'Sol (PEN)'), ('PGK', 'Kina (PGK)'), ('PHP', 'Philippine Peso (PHP)'), ('PKR', 'Pakistan Rupee (PKR)'), ('PLN', 'Zloty (PLN)'), ('PYG', 'Guarani (PYG)'), ('QAR', 'Qatari Rial (QAR)'), ('RON', 'Romanian Leu (RON)'), ('RSD', 'Serbian Dinar (RSD)'), ('RUB', 'Russian Ruble (RUB)'), ('RWF', 'Rwanda Franc (RWF)'), ('SAR', 'Saudi Riyal (SAR)'), ('SBD', 'Solomon Islands Dollar (SBD)'), ('SCR', 'Seychelles Rupee (SCR)'), ('SDG', 'Sudanese Pound (SDG)'), ('SEK', 'Swedish Krona (SEK)'), ('SGD', 'Singapore Dollar (SGD)'), ('SHP', 'Saint Helena Pound (SHP)'), ('SLL', 'Leone (SLL)'), ('SOS', 'Somali Shilling (SOS)'), ('SRD', 'Surinam Dollar (SRD)'), ('SSP', 'South Sudanese Pound (SSP)'), ('STD', 'Dobra (STD)'), ('SVC', 'El Salvador Colon (SVC)'), ('SYP', 'Syrian Pound (SYP)'), ('SZL', 'Lilangeni (SZL)'), ('THB', 'Baht (THB)'), ('TJS', 'Somoni (TJS)'), ('TMT', 'Turkmenistan New Manat (TMT)'), ('TND', 'Tunisian Dinar (TND)'), ('TOP', 'Pa’anga (TOP)'), ('TRY', 'Turkish Lira (TRY)'), ('TTD', 'Trinidad and Tobago Dollar (TTD)'), ('TWD', 'New Taiwan Dollar (TWD)'), ('TZS', 'Tanzanian Shilling (TZS)'), ('UAH', 'Hryvnia (UAH)'), ('UGX', 'Uganda Shilling (UGX)'), ('USD', 'US Dollar (USD)'), ('UYU', 'Peso Uruguayo (UYU)'), ('UZS', 'Uzbekistan Sum (UZS)'), ('VEF', 'Bolívar (VEF)'), ('VND', 'Dong (VND)'), ('VUV', 'Vatu (VUV)'), ('WST', 'Tala (WST)'), ('XAF', 'CFA Franc BEAC (XAF)'), ('XAG', 'Silver (XAG)'), ('XAU', 'Gold (XAU)'), ('XBA', 'Bond Markets Unit European Composite Unit (EURCO) (XBA)'), ('XBB', 'Bond Markets Unit European Monetary Unit (E.M.U.-6) (XBB)'), ('XBC', 'Bond Markets Unit European Unit of Account 9 (E.U.A.-9) (XBC)'), ('XBD', 'Bond Markets Unit European Unit of Account 17 (E.U.A.-17) (XBD)'), ('XCD', 'East Caribbean Dollar (XCD)'), ('XDR', 'SDR (Special Drawing Right) (XDR)'), ('XOF', 'CFA Franc BCEAO (XOF)'), ('XPD', 'Palladium (XPD)'), ('XPF', 'CFP Franc (XPF)'), ('XPT', 'Platinum (XPT)'), ('XSU', 'Sucre (XSU)'), ('XTS', 'Codes specifically reserved for testing purposes (XTS)'), ('XUA', 'ADB Unit of Account (XUA)'), ('XXX', 'The codes assigned for transactions where no currency is involved (XXX)'), ('YER', 'Yemeni Rial (YER)'), ('ZAR', 'Rand (ZAR)'), ('ZMW', 'Zambian Kwacha (ZMW)'), ('ZWL', 'Zimbabwe Dollar (ZWL)')], max_length=3)),
                ('rate_for_the_day', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount', models.PositiveIntegerField()),
                ('equivalent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cgst', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sgst', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.guestprofile')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
                ('room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
            ],
            options={
                'verbose_name': 'historical forex',
                'verbose_name_plural': 'historical forexs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFixedCharge',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('supplement', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.guestprofile')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
                ('transaction_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.transactioncode')),
            ],
            options={
                'verbose_name': 'historical fixed charge',
                'verbose_name_plural': 'historical fixed charges',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocumentType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_type', models.CharField(db_index=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical document type',
                'verbose_name_plural': 'historical document types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('document_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.documenttype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.invoice')),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
            ],
            options={
                'verbose_name': 'historical document',
                'verbose_name_plural': 'historical documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDailyDetail',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('room_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('adults', models.PositiveSmallIntegerField()),
                ('children', models.PositiveSmallIntegerField(default=0)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.marketcode')),
                ('package', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.package')),
                ('rate_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.ratecode')),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
                ('room', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.room')),
                ('room_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.roomtype')),
                ('source', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.source')),
            ],
            options={
                'verbose_name': 'historical daily detail',
                'verbose_name_plural': 'historical daily details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCardDetail',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name_on_card', models.TextField()),
                ('card_number', creditcards.models.CardNumberField(max_length=25, verbose_name='card number')),
                ('expiry', creditcards.models.CardExpiryField(verbose_name='expiration date')),
                ('cvv_cvc', creditcards.models.SecurityCodeField(max_length=4, verbose_name='security code')),
                ('masked_card_number', models.CharField(max_length=16, null=True)),
                ('masked_cvv_cvc', models.CharField(blank=True, default='XXX', max_length=3, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.guestprofile')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('payment_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.paymenttype')),
            ],
            options={
                'verbose_name': 'historical card detail',
                'verbose_name_plural': 'historical card details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCancellation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cancellation_type', models.CharField(choices=[('with_payment', 'With Payment'), ('without_payment', 'Without Payment')], max_length=100)),
                ('cancellation_date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group_reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.groupreservation')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('payment_transaction', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.transaction')),
                ('reason_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reason')),
                ('reservation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='reservations.reservation')),
            ],
            options={
                'verbose_name': 'historical cancellation',
                'verbose_name_plural': 'historical cancellations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GroupReservationRoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('number_of_rooms', models.PositiveIntegerField(default=0)),
                ('number_of_picked_rooms', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('group_reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='reservations.groupreservation')),
                ('rate_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservation_room_types', to='reservations.ratecode')),
                ('room_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservation_room_types', to='reservations.roomtype')),
            ],
        ),
        migrations.AddField(
            model_name='groupreservation',
            name='reservation_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='reservations.reservationtype'),
        ),
        migrations.AddField(
            model_name='groupreservation',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_reservations', to='reservations.source'),
        ),
        migrations.AddField(
            model_name='groupreservation',
            name='travel_agent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='travel_agent_group_reservations', to='accounts.account'),
        ),
        migrations.CreateModel(
            name='Forex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('AED', 'UAE Dirham (AED)'), ('AFN', 'Afghani (AFN)'), ('ALL', 'Lek (ALL)'), ('AMD', 'Armenian Dram (AMD)'), ('ANG', 'Netherlands Antillean Guilder (ANG)'), ('AOA', 'Kwanza (AOA)'), ('ARS', 'Argentine Peso (ARS)'), ('AUD', 'Australian Dollar (AUD)'), ('AWG', 'Aruban Florin (AWG)'), ('AZN', 'Azerbaijanian Manat (AZN)'), ('BAM', 'Convertible Mark (BAM)'), ('BBD', 'Barbados Dollar (BBD)'), ('BDT', 'Taka (BDT)'), ('BGN', 'Bulgarian Lev (BGN)'), ('BHD', 'Bahraini Dinar (BHD)'), ('BIF', 'Burundi Franc (BIF)'), ('BMD', 'Bermudian Dollar (BMD)'), ('BND', 'Brunei Dollar (BND)'), ('BOB', 'Boliviano (BOB)'), ('BRL', 'Brazilian Real (BRL)'), ('BSD', 'Bahamian Dollar (BSD)'), ('BTN', 'Ngultrum (BTN)'), ('BWP', 'Pula (BWP)'), ('BYN', 'Belarusian Ruble (BYN)'), ('BZD', 'Belize Dollar (BZD)'), ('CAD', 'Canadian Dollar (CAD)'), ('CDF', 'Congolese Franc (CDF)'), ('CHF', 'Swiss Franc (CHF)'), ('CLP', 'Chilean Peso (CLP)'), ('CNY', 'Yuan Renminbi (CNY)'), ('COP', 'Colombian Peso (COP)'), ('CRC', 'Costa Rican Colon (CRC)'), ('CUC', 'Peso Convertible (CUC)'), ('CUP', 'Cuban Peso (CUP)'), ('CVE', 'Cabo Verde Escudo (CVE)'), ('CZK', 'Czech Koruna (CZK)'), ('DJF', 'Djibouti Franc (DJF)'), ('DKK', 'Danish Krone (DKK)'), ('DOP', 'Dominican Peso (DOP)'), ('DZD', 'Algerian Dinar (DZD)'), ('EGP', 'Egyptian Pound (EGP)'), ('ERN', 'Nakfa (ERN)'), ('ETB', 'Ethiopian Birr (ETB)'), ('EUR', 'Euro (EUR)'), ('FJD', 'Fiji Dollar (FJD)'), ('FKP', 'Falkland Islands Pound (FKP)'), ('GBP', 'Pound Sterling (GBP)'), ('GEL', 'Lari (GEL)'), ('GHS', 'Ghana Cedi (GHS)'), ('GIP', 'Gibraltar Pound (GIP)'), ('GMD', 'Dalasi (GMD)'), ('GNF', 'Guinea Franc (GNF)'), ('GTQ', 'Quetzal (GTQ)'), ('GYD', 'Guyana Dollar (GYD)'), ('HKD', 'Hong Kong Dollar (HKD)'), ('HNL', 'Lempira (HNL)'), ('HRK', 'Kuna (HRK)'), ('HTG', 'Gourde (HTG)'), ('HUF', 'Forint (HUF)'), ('IDR', 'Rupiah (IDR)'), ('ILS', 'New Israeli Sheqel (ILS)'), ('INR', 'Indian Rupee (INR)'), ('IQD', 'Iraqi Dinar (IQD)'), ('IRR', 'Iranian Rial (IRR)'), ('ISK', 'Iceland Krona (ISK)'), ('JMD', 'Jamaican Dollar (JMD)'), ('JOD', 'Jordanian Dinar (JOD)'), ('JPY', 'Yen (JPY)'), ('KES', 'Kenyan Shilling (KES)'), ('KGS', 'Som (KGS)'), ('KHR', 'Riel (KHR)'), ('KMF', 'Comoro Franc (KMF)'), ('KPW', 'North Korean Won (KPW)'), ('KRW', 'Won (KRW)'), ('KWD', 'Kuwaiti Dinar (KWD)'), ('KYD', 'Cayman Islands Dollar (KYD)'), ('KZT', 'Tenge (KZT)'), ('LAK', 'Kip (LAK)'), ('LBP', 'Lebanese Pound (LBP)'), ('LKR', 'Sri Lanka Rupee (LKR)'), ('LRD', 'Liberian Dollar (LRD)'), ('LSL', 'Loti (LSL)'), ('LYD', 'Libyan Dinar (LYD)'), ('MAD', 'Moroccan Dirham (MAD)'), ('MDL', 'Moldovan Leu (MDL)'), ('MGA', 'Malagasy Ariary (MGA)'), ('MKD', 'Denar (MKD)'), ('MMK', 'Kyat (MMK)'), ('MNT', 'Tugrik (MNT)'), ('MOP', 'Pataca (MOP)'), ('MRO', 'Ouguiya (MRO)'), ('MUR', 'Mauritius Rupee (MUR)'), ('MVR', 'Rufiyaa (MVR)'), ('MWK', 'Malawi Kwacha (MWK)'), ('MXN', 'Mexican Peso (MXN)'), ('MYR', 'Malaysian Ringgit (MYR)'), ('MZN', 'Mozambique Metical (MZN)'), ('NAD', 'Namibia Dollar (NAD)'), ('NGN', 'Naira (NGN)'), ('NIO', 'Cordoba Oro (NIO)'), ('NOK', 'Norwegian Krone (NOK)'), ('NPR', 'Nepalese Rupee (NPR)'), ('NZD', 'New Zealand Dollar (NZD)'), ('OMR', 'Rial Omani (OMR)'), ('PAB', 'Balboa (PAB)'), ('PEN', 'Sol (PEN)'), ('PGK', 'Kina (PGK)'), ('PHP', 'Philippine Peso (PHP)'), ('PKR', 'Pakistan Rupee (PKR)'), ('PLN', 'Zloty (PLN)'), ('PYG', 'Guarani (PYG)'), ('QAR', 'Qatari Rial (QAR)'), ('RON', 'Romanian Leu (RON)'), ('RSD', 'Serbian Dinar (RSD)'), ('RUB', 'Russian Ruble (RUB)'), ('RWF', 'Rwanda Franc (RWF)'), ('SAR', 'Saudi Riyal (SAR)'), ('SBD', 'Solomon Islands Dollar (SBD)'), ('SCR', 'Seychelles Rupee (SCR)'), ('SDG', 'Sudanese Pound (SDG)'), ('SEK', 'Swedish Krona (SEK)'), ('SGD', 'Singapore Dollar (SGD)'), ('SHP', 'Saint Helena Pound (SHP)'), ('SLL', 'Leone (SLL)'), ('SOS', 'Somali Shilling (SOS)'), ('SRD', 'Surinam Dollar (SRD)'), ('SSP', 'South Sudanese Pound (SSP)'), ('STD', 'Dobra (STD)'), ('SVC', 'El Salvador Colon (SVC)'), ('SYP', 'Syrian Pound (SYP)'), ('SZL', 'Lilangeni (SZL)'), ('THB', 'Baht (THB)'), ('TJS', 'Somoni (TJS)'), ('TMT', 'Turkmenistan New Manat (TMT)'), ('TND', 'Tunisian Dinar (TND)'), ('TOP', 'Pa’anga (TOP)'), ('TRY', 'Turkish Lira (TRY)'), ('TTD', 'Trinidad and Tobago Dollar (TTD)'), ('TWD', 'New Taiwan Dollar (TWD)'), ('TZS', 'Tanzanian Shilling (TZS)'), ('UAH', 'Hryvnia (UAH)'), ('UGX', 'Uganda Shilling (UGX)'), ('USD', 'US Dollar (USD)'), ('UYU', 'Peso Uruguayo (UYU)'), ('UZS', 'Uzbekistan Sum (UZS)'), ('VEF', 'Bolívar (VEF)'), ('VND', 'Dong (VND)'), ('VUV', 'Vatu (VUV)'), ('WST', 'Tala (WST)'), ('XAF', 'CFA Franc BEAC (XAF)'), ('XAG', 'Silver (XAG)'), ('XAU', 'Gold (XAU)'), ('XBA', 'Bond Markets Unit European Composite Unit (EURCO) (XBA)'), ('XBB', 'Bond Markets Unit European Monetary Unit (E.M.U.-6) (XBB)'), ('XBC', 'Bond Markets Unit European Unit of Account 9 (E.U.A.-9) (XBC)'), ('XBD', 'Bond Markets Unit European Unit of Account 17 (E.U.A.-17) (XBD)'), ('XCD', 'East Caribbean Dollar (XCD)'), ('XDR', 'SDR (Special Drawing Right) (XDR)'), ('XOF', 'CFA Franc BCEAO (XOF)'), ('XPD', 'Palladium (XPD)'), ('XPF', 'CFP Franc (XPF)'), ('XPT', 'Platinum (XPT)'), ('XSU', 'Sucre (XSU)'), ('XTS', 'Codes specifically reserved for testing purposes (XTS)'), ('XUA', 'ADB Unit of Account (XUA)'), ('XXX', 'The codes assigned for transactions where no currency is involved (XXX)'), ('YER', 'Yemeni Rial (YER)'), ('ZAR', 'Rand (ZAR)'), ('ZMW', 'Zambian Kwacha (ZMW)'), ('ZWL', 'Zimbabwe Dollar (ZWL)')], max_length=3)),
                ('rate_for_the_day', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount', models.PositiveIntegerField()),
                ('equivalent_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cgst', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('sgst', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('guest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forexes', to='accounts.guestprofile')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forexes', to='reservations.reservation')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forexes', to='reservations.room')),
            ],
        ),
        migrations.AddField(
            model_name='folio',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folios', to='reservations.reservation'),
        ),
        migrations.AddField(
            model_name='folio',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='folios', to='reservations.room'),
        ),
        migrations.CreateModel(
            name='FixedCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=100)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveSmallIntegerField()),
                ('supplement', models.CharField(max_length=255)),
                ('guest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fixed_charges', to='accounts.guestprofile')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixed_charges', to='reservations.reservation')),
                ('transaction_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fixed_charges', to='reservations.transactioncode')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='reservations.documenttype')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='reservations.invoice')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='reservations.reservation')),
            ],
        ),
        migrations.AddField(
            model_name='dailydetail',
            name='reservation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_details', to='reservations.reservation'),
        ),
        migrations.AddField(
            model_name='dailydetail',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_details', to='reservations.room'),
        ),
        migrations.AddField(
            model_name='dailydetail',
            name='room_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_details', to='reservations.roomtype'),
        ),
        migrations.AddField(
            model_name='dailydetail',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_details', to='reservations.source'),
        ),
        migrations.CreateModel(
            name='Cancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cancellation_type', models.CharField(choices=[('with_payment', 'With Payment'), ('without_payment', 'Without Payment')], max_length=100)),
                ('cancellation_date', models.DateField()),
                ('group_reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellations', to='reservations.groupreservation')),
                ('payment_transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancellations', to='reservations.transaction')),
                ('reason_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancellations', to='reservations.reason')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellations', to='reservations.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_alert', models.TextField(blank=True, null=True)),
                ('check_out_alert', models.TextField(blank=True, null=True)),
                ('reservation_alert', models.TextField(blank=True, null=True)),
                ('housekeeping_alert', models.TextField(blank=True, null=True)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='reservations.reservation')),
            ],
        ),
    ]
